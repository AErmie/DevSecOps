trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  WebContainerImageName: eshopwebmvc
  WebContainerDockerfile: $(System.DefaultWorkingDirectory)/Application-Source-Code/src/Web/Dockerfile
  APIContainerImageName: eshoppublicapi
  dockerRegistryEndpoint: 'AzureContainerRegistry-DevSecOps'

stages:
- stage: QualityCheckStage
  displayName: Quality Check Stage
  jobs:
  - job: TrivyJob
    displayName: Run AquaSec Trivy Scan
    steps:
    - template: templates/docker-compose-build.yml

    - task: AquaSecurityOfficial.trivy-official.custom-build-release-task.trivy@1
      displayName: Run AquaSec Trivy Filesystem Scan
      inputs:
        version: 'latest'
        debug: true
        path: $(System.DefaultWorkingDirectory)/Application-Source-Code/src

    - task: securedevelopmentteam.vss-secure-development-tools.build-task-trivy.Trivy@1
      displayName: Run AquaSec Trivy Container Image Scan
      inputs:
        version: 'latest'
        debug: true
        image: $(WebContainerImageName):latest
      
      # - bash: | 
      #     docker run -d -p 5000:8080 $(ACRLoginServer)/$(ACRRepository):$(Build.BuildId)
      #   displayName: 'Run App in Docker Container'
      
      # - script: | 
      #     docker pull aquasec/trivy:latest
      #     docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock \
      #       --volume $HOME/Library/Caches:/root/.cache/ --name Trivy aquasec/trivy:latest --format template --template "@contrib/junit.tpl" --output junit-report.xml \
      #        $(ACRLoginServer)/$(ACRRepository):$(Build.BuildId)
      #     docker cp $HOME/Library/Caches/junit-report.xml $(System.DefaultWorkingDirectory)/
      #     echo "Trivy DIR Content"
      #     cd $HOME/Library/Caches/trivy
      #     ls -la
      #     echo "Default Working DIR Content"
      #     cd $(System.DefaultWorkingDirectory)
      #     ls -la
      #   displayName: Run AquaSec Trivy

      # - task: PublishTestResults@2
      #   displayName: Publish Test Results
      #   inputs:
      #     testResultsFormat: 'JUnit'
      #     testResultsFiles: '**/junit-report.xml'
      #     mergeTestResults: false
      #     failTaskOnFailedTests: true
      #     testRunTitle: 'AquaSec Trivy'