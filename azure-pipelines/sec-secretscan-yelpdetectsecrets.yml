trigger: none

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: QualityCheckStage
  displayName: Quality Check Stage
  jobs:
  - job: YelpDetectSecretsJob
    displayName: Run YELP Detect-Secrets Scan
    steps:
    - task: UsePythonVersion@0
      displayName: "Set Python 3 as default"
      inputs:
        versionSpec: 3

    - task: CmdLine@2
      displayName: "Install YELP Detect-Secrets using PIP"
      inputs:
        script: |
          pip install detect-secrets

    - task: CmdLine@2
      displayName: "Run YELP Detect-Secrets Tool"
      inputs:
        script: |
          mkdir YelpDetectSecretsReport
          detect-secrets scan --all-files --force-use-all-plugins > YelpDetectSecretsReport/detect-secrets.json

    - script: | 
        ls -la
        cd YelpDetectSecretsReport
        ls -la
      displayName: Check DIR Contents

    - task: PublishPipelineArtifact@1
      displayName: "Publish results in the Pipeline Artifact"
      inputs:
        targetPath: "$(System.DefaultWorkingDirectory)/YelpDetectSecretsReport/detect-secrets.json"
        artifact: "YELP Detect-Secrets Report"
        publishLocation: "pipeline"

    - task: PowerShell@2
      displayName: "Analyzing YELP Detect-Secrets results"
      condition: always()
      inputs:
        targetType: "inline"
        script: |
          $ds = Get-Content detect-secrets.json
          Write-Output $ds

          $dsObj = $ds | ConvertFrom-Json
          $num = ($dsObj.results | Get-Member -MemberType NoteProperty).Count

          if ($num -gt 0) {
            Write-Host "##vso[task.logissue type=error]Secrets were detected in code."
            exit 1
          }
          else {
            Write-Host "No secrets detected."
          }
        pwsh: true
